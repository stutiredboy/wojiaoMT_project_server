
package fire.pb.mission;


import fire.pb.map.MapConfig;
import fire.pb.mission.fairyland.FairylandMgr;

// {{{ RPCGEN_IMPORT_BEGIN
// {{{ DO NOT EDIT THIS
import com.locojoy.base.Marshal.OctetsStream;
import com.locojoy.base.Marshal.MarshalException;

abstract class __CReturnFairyland__ extends mkio.Protocol { }

// DO NOT EDIT THIS }}}
// RPCGEN_IMPORT_END }}}

public class CReturnFairyland extends __CReturnFairyland__ {
	@Override
	protected void process() {
		// protocol handle
		final long roleid = gnet.link.Onlines.getInstance().findRoleid(this);
		if (roleid < 0)
			return;
		//闂傚倸鍊搁崐鎼佸磹閹间礁纾归柟闂寸绾惧綊鏌ｉ幋锝呅撻柛銈呭閺屾盯顢曢敐鍡欙紩闂佽法鍠愰弸鑽ょ不閹惧磭鏆﹀┑鍌滎焾椤懘鏌嶉妷銉ユ毐缂併劊鍎靛缁樻媴缁涘缍堟繝銏㈡嚀濡瑩寮茬捄浣曟棃宕ㄩ鐙呯幢闂佽鍑界紞鍡樼閺嶎厼缁╁ù鐘差儐閻撶喐淇婇姘儓缂佺嫏鍐剧唵閻犲搫鎼顓㈡煛鐏炲墽銆掗柨鐔告灮缂嶅棙绂嶉崼鏇炵？闁哄啫鐗婇悡娑氾拷鐧告嫹闁跨喍绮欏畷浼村箻閼告娼熼梺鍦劋椤ㄥ懘锝為崨瀛樼厽婵☆垵娅ｉ敍宥吤瑰搴濈敖缂佽鲸鎹囧畷鎺戔枎閹烘垵甯┑鐘愁問閸犳顭囧▎鎿冩晪闁挎繂顦柋鍥煛閸モ晛锟斤綁鏁冮崒娑氬幈闂佸搫娲㈤崝宀勬倶閻樼數纾兼い鎰╁灮鏁堥梺鍝勬湰缁嬫挻绂掗敃鍌氱鐟滃繘鎮￠敓鐣岀磽閸屾瑧鍔嶆い銊﹀姉閹广垹鈹戠�ｎ亞鐣哄┑掳鍊曢崯顖炲窗閸℃稒鐓曢柡鍥ュ妼婢х増銇勯敂鍝勫婵﹨娅ｇ槐鎺懳熺紒妯哄壍缂傚倷鑳剁划顖滄崲閸岀儐鏁嬮柨婵嗘处鐎氭碍绻涢弶鎴剱妞ゎ偄绉瑰娲濞戞氨顔婃繝娈垮枤閺佹槒妫㈠┑鐘绘涧椤戝棝鍩涢幋锔界厱婵炴垶锕崝鐔虹磼閻樿櫕宕岄柟顔筋殔椤繈鎮℃惔鈾�鎷梻浣虹《閺呮粎绮欓幒鎴殫闁告洦鍓涚粻楣冩煟閹伴潧澧柡澶嬫倐濮婄粯鎷呴搹鐟扮闂佸憡姊归敋闁崇粯鏌ㄩ埥澶娾枎閹搭厽閿ら柣鐔哥矌婢ф鏁Δ鍛亗婵炴垶鈼よぐ鎺撴櫜闁搞儮鏅滈幉姗�姊洪幖鐐诧拷鏍偡閳哄懎钃熼柨婵嗩槹閺呮煡鏌涘☉鍗炲箺娴滄稒淇婇悙顏勶拷銈夊磻閸涱垱宕查柛鏇ㄥ灠缁犳煡鏌涢弴銊ュ濠殿垱鎸抽弻锟犲炊瑜庨ˉ婊勭箾鐠囇呯暤闁诡噯绻濆鎾閿涘嫬甯楅梻浣哥枃濡椼劎绮堟笟锟藉鎼佸Χ婢跺鍘介梺鐟版惈缁夊爼鎯屽▎鎾寸厸閻忕偛澧藉ú瀵革拷娈垮櫘閸ｏ絽鐣烽幒鎴僵妞ゆ帪鎷风紒鐙呯稻缁绘繂鈻撻崹顔界亪闂佹寧娲忛崕閬嶁�旈崘顔藉癄濠㈣泛鏈▓鎯ь渻閵堝棗濮х紒鐘冲灩缁牏锟斤綆鍋佹禍婊堟煙娴煎瓨娑уù婊勵殘缁辨帗娼忛妸褏鐤勫┑顔硷功缁垶骞忛崨顖涘枂闁告洦鍋傞崫妤呮⒒娴ｅ憡鍟為柡灞诲姂椤㈡牗寰勬繝鍕闂佽法鍠撴慨瀵哥不椤曪拷閺岋綁鏁愰崨鏉款伃缂備椒绶ょ粻鎾愁潖閾忕懓瀵查柡鍥╁仜閳峰顪冮妶搴″箹婵炲樊鍙冮獮鍐偪椤栨ü姹楅梺鍦劋閹搁箖宕ｉ崱娑欌拺缂備焦蓱閻撱儱顭胯闁帮綁骞嗙仦瑙ｆ瀻闁规澘鐏氶鏃堟⒑缂佹ê濮屾い鏇熺矊椤斿繘濡烽埡鍌涘殙闂佸搫绋侀崢浠嬫偂閺囩喓绠鹃柟瀛樼箓閼歌顨ラ悙杈捐�块柡灞诲妼閳藉鈻庨幋鐐叉珰婵犳鍠栭敃銊モ枍閿濆洦顫曢柟鐑樺殾閻旇铏圭磼濡攱瀵樻繝鐢靛Х閺佹悂宕戝☉銏犵闁瑰濮风粈濠傘�掑鐐闂侀潧妫旂粈渚�鍩㈡惔銊ョ疀妞ゆ帒鍊婚悰顕�姊绘担鍝ョШ闁稿锕畷銏ゅ箹娴ｅ摜顔嗗┑鐐叉▕娴滄繈鍩涢幋鐘垫／妞ゆ挾鍋為崳鐟懊瑰鍐Ш闁哄本绋撻敓鏂ょ秵閸嬪棗煤鐎甸潻鎷风憴鍕缂佽鐗婃穱濠囨嚋闂堟稓绐為柣搴秵閸撴瑩鐛崼銉︹拺閻犲洦褰冮崵杈╃磽瀹ュ懏顥㈢�规洘绮岄埢搴ㄥ箛椤曞懏绁梻鍌欑贰閸撴瑧绮旈悽鍛婂亗闁哄洢鍨洪悡鍐级閻愭潙顥嬮柛鏂跨Ч閺屾盯濡堕崨顔肩獩闂佽法鍠庨敓鐣屽櫏濞兼劖绻涢崣澶屽⒈缂佽京鍋炵换婵嬪炊閵夘垱瀚瑰〒姘炬嫹鐎殿喗鎸虫慨锟介柍鈺佸暞閻濇娊姊绘担铏广�婇柛鎾寸箞閹兘濡烽敂鍓ь啎闂佽法鍣﹂幏锟�?
		
		final fire.pb.map.Role role = fire.pb.map.RoleManager.getInstance().getRoleByID(roleid);
		if (role==null)
			return ;
		MapConfig mc = role.getCurMapConfig();
		if (!(mc.getDynamic()==0&&mc.getVisibletype()==0)) {
			fire.pb.talk.MessageMgr.sendMsgNotify(roleid, 143366, null);
			return;
		}
		xbean.RolePos rolePos = xtable.Roleposes.select(roleid);
		//if (rolePos==null||rolePos.getDynamicmap()<1500) {
		//闂傚倸鍊搁崐鎼佸磹閹间礁纾归柟闂寸绾惧綊鏌熼梻瀵割槮缁惧墽鎳撻—鍐拷锝庝簻椤掋垺銇勯幇顏嗙煓闁哄被鍔戦幃銏ゅ传閸曟垯鍨荤槐鎺楀箛椤撗勭暦缂備胶绮惄顖炵嵁鐎ｎ喗鍊烽柛顭戝亜濞呮姊绘担鍛婂暈闁荤喆鍎抽幑銏狀潨閿熻棄顕ｆ繝姘嵆闁靛繒濞�閸炶泛鈹戦悩缁樻锭婵炲眰鍔戞俊鍫曨敃閿旇В鎷洪悷婊呭鐢晛螞閹达附鐓曢煫鍥ㄦ瀭椤忓牊鍋╅柣銈庡灛娴滃綊鏌熼悜妯肩畺闁哄懏绻堝娲濞戞艾顣哄┑鐐茬湴閸旀垵鐣烽姀鐙�鐓ラ柛顐ゅ暱閹风粯绻涙潏鍓ф偧闁烩剝妫冨畷鐢稿礃椤旂晫鍘遍梺缁樻煥閹测�崇暦鐏炶В鏀介梽鍥春閺嶎厼绠氶柡鍐ㄧ墕閻撴垿鎮锋担闈涳拷鏇熸叏閸屾稒鍙忓┑鐘插鐢盯鏌熷畡鐗堝殗闁诡喗绮岃灒闁绘垶顭囬弳姘辩磽閸屾艾锟界兘鎳楅懜鍨弿閻庨潧鎽滈惌鎾绘煟閻旂顥嬮柡鍡閹叉悂鎮ч崼婵堢懖闁诲海鏁告慨鎾�︾捄銊﹀磯闁绘垶蓱閹峰崬鈹戦悙鑼闁稿孩濞婇崺鐐哄箣閿旇棄浜圭紓鍌欑劍钃遍梺娆惧幖椤啴濡堕崱妤冧淮闂佺娅曢敃銏ょ嵁閸愵喗鍊烽悷浣风劍濡炰粙銆侀弮鍫濆窛妞ゆ牗鑹剧粻鐐烘⒒閸屾瑨鍏屾い銏狅躬瀹曟椽宕堕锟界粈澶岋拷骞垮劚閹冲寮稿鍛斀闁绘ɑ褰冮弳鏇犵磼鐠囧弶顥㈤柡灞剧洴楠炴ê螖閿熶粙宕锔惧祦閻庯綆浜栭弨鑺ャ亜閺冨倶锟藉寮ㄧ紒妯圭箚闁绘劖澹嗛惌娆愵殽閻愭彃鏆ｉ柟顔界矒閹稿﹥寰勫畝濠傛倯濠碉紕鍋戦崐鏍涙担鍝ユ殾闁割煈鍋佹禒姘舵煙閹澘袚闁绘挾鍠栭獮鏍庨锟介敓濮愬�曢…鍥箛椤撶姷顔曢梺鍛婄懃椤э拷闁兼澘娼￠弻鈩冩媴缁嬫寧娈绘繝娈垮櫙閹风兘姊洪棃娑氬闁硅櫕鍔欓幃楣冨传閸曘劍鏂�闂佺粯顭堥婊冾啅閵夆晜鐓熸俊銈忔嫹闁挎洦浜滈锝夊箵閹烘繄鍙嗛梺鍓插亞閸犳捇宕㈡ィ鍐┾拺閻犲洠锟藉啿绠洪柣銏╁灡鐢�崇暦濠靛棭娼╂い鎾寸矆缁ㄨ顪冮妶鍡楀闁革綇绠撻獮蹇涙倻閽樺鐤�婵炶揪绲块幊鎾绘儊濠婂牊鈷掑〒姘炬嫹婵炰匠鍥ㄥ亱闁糕剝銇傚☉妯滄棃宕橀鍡欐殽闂備礁婀遍崕銈夈�冮崱娑欏亗闁哄洨鍋愰弨浠嬫煟濡绲婚柨鐔凤拷鐔峰惞缂侇喗鏌ㄧ叅妞ゅ繐鎳愰崢闈涱渻閵堝棙绌块柟鐑筋棑缁辨帡鎮╁畷鍥р拰閻庢鍠栭…宄扮暦閸楃倣鏃�绻濋崒娑橈拷顖炴⒒娴ｈ櫣銆婇柛鎾寸箞閹兘濡烽埡鍐ㄧウ闂佸壊鍋侀崕鏌ュ煕閹烘嚚褰掓晲閸ャ劌娈屽銈嗘礃缁秵绌辨繝鍥舵晝闁挎稑瀚俊浠嬫⒑闁稓鈹掗柛鏃�鍨舵穱濠囧醇閺囩偟鍊炲銈庡幗閸ㄥ灚绂掑ú顏呪拻濞达絽鎲￠崯鐐烘煟閻旀潙鍔﹂挊婵嬪级閸碍娅囧☉鎾崇Т铻栭柨婵嗘噹閺嗘瑧绱掗悪娆忔处閻撴洘銇勯幇顔夹㈤柣蹇婃櫅闇夋繝濠傜墢閻ｆ椽鏌熼绛嬫當妞ゎ偅绻堥幃娆擃敆閿熶粙顢旈敓锟�,闂傚倸鍊搁崐鎼佸磹閹间礁纾归柟闂寸绾惧綊鏌ｉ幋锝呅撻柛濠傛健閺屻劑寮撮悙璇ф嫹閸濄儳涓嶉柡宥庡幗閻撴洘銇勯幇鍓佺ɑ缂侊拷閿熺晫绱掗悙顒�鍔ゆ繛纭风節瀵槒顦剁紒鐘崇洴閺佹劙宕ㄩ鍌氬毈闂傚倷绀侀幉锟犳偡閵壯勫床闁圭儤顨嗛弲鎼佹煕婵犲嫬娅忔繛鍏煎姈缁绘盯宕ｆ径灞解吂闁绘挶鍊濋弻銊╁籍閿熶粙骞忓┑瀣鐎瑰嫰鍋婂鈺傘亜閹烘埈妲洪柛姘儔濮婃椽宕崟顓犲姽缂傚倸绉崇粈渚�顢氶敐澶樻晢闁告洦鍋嗛鍥煙閸忚偐鏆橀柛銊ョ秺瀵悂骞嬮敂瑙ｆ嫽婵炶揪绲介幗婊堟晬瀹ュ洨纾兼い鏇炴噹閻忕娀鎮￠妶澶嬬厽闁哄啫鍊哥敮鍓佺磼閻樺磭澧ǎ鍥э躬婵″爼宕ㄩ鍏碱仭闂備礁鎼幊蹇涙偂閿熺姷宓侀柡宥庡亾閹峰嘲鈽夊▎妯煎姺缂備胶濮甸敃銏ゅ蓟閿濆鐓涘〒姘炬嫹妞ゅ孩顨嗛妵鍕敂閸曨偅娈绘繝纰橈拷宕囧煟鐎规洘锕㈤垾锕傚箳閹炬剚浼撻梻浣告惈濞层垽宕归崷顓犱笉闁绘娅曢崣蹇斾繆閵堝拋鍎愰悗姘辨嚀铻栭柣姗�娼ф禒婊堟煕閻曚礁浜柣蹇撳暣濮婅櫣鎹勯妸銉︾�虹紓渚囧枟閻熲晛鐣峰ú顏勎ㄩ柨鏇嫹缂佸墎鍋涢埞鎴︽倷闂堟稐澹曢梺璇叉唉椤曆囧煘閹达箑鐓￠柛鈩冾殘娴狀垶姊洪崨濠庣劶闁告洦鍓欏鍧楁⒑缂佹ê鐏︽い顓炴川瀵囨晸娴犲鈷戞慨鐟版搐閻忓弶绻涙担鍐插椤╅攱绻濇繝鍌滃闁绘挾鍠愭穱濠囧Χ韫囨柨顏堕梻浣瑰濞诧附绂嶅鍫熷仼闁汇値鍨禍褰掓煙閻戞ê鐏ラ柣搴幖椤啴濡堕崱妯锋嫽闂佺顑嗛幐鎼佸煝閹炬番鍋呴柛鎰ㄦ杹閹锋椽鎮峰鍛暭閻㈩垱顨婇弫宥夋偄閾忓湱锛滈梺璺ㄥ枙婵倝骞忛崨瀛樻優闂侇偅绋撻悷婵囩節閻㈤潧浠﹂柛銊ョ埣閹兘鏁愰崱娆樻锤濠电姴锕ら悧濠囨偂濞嗘挻鐓欓悷娆忓婵牏鐥鐐测挃闁跨喕濮ょ粙鎺旀崲閸繍娼栭柧蹇氼潐鐎氭岸鏌ょ喊鍗炲妞ゆ梹甯楃换娑氾拷娑欘焽閻孩绻涙径瀣创闁挎繄鍋犵粻娑㈠箻娴ｈ銇濇い銏℃瀹曠喖顢曢妶鍥ф槬濠电姷鏁告慨鐑藉极閸涘﹥鍙忛悗鐢告交閹峰嘲顫濋悡搴＄睄閻庤娲濆▍鏇犵矉閹烘棑鎷烽敐搴′簮闁归攱妞藉铏规兜閸涱厺姹楅梺绋款儐缁嬫帗绌辨繝鍥ч敜婵°倓鑳堕崢鍛婄箾鏉堝墽鎮奸柣鈩冩瀹曢潧鈻庨幘瀵稿幗闂佹寧绻傞幊搴∥ｆ繝姘嚉闁哄稁鍘介悡銉╂煟閺傚灝顣抽柣顓熺懇閺屻劌鈹戦崼婵呯捕濡炪値鍘归崝鎴濈暦婵傚憡鍋勯柛娑橆煬娴犙囨⒒閸屾瑦绁板┑顔哄�濋弫瀣渻閵堝繒鐣靛ù婊嗘硾椤曪綁骞庨懞銉︽珖闂佺鏈粙鎾诲储閸楃儐娓婚柕鍫濇婵呯磼閹绘帒鈷旂紒顔肩墦瀹曟﹢顢欓悾灞藉箞闂佽鍑界紞鍡涘磻閸曨剚鍙忕�广儱娴勯幏宄扳枔閸喗鐏堥梺缁樼墱閸樠囨偩闁垮闄勯柛鎾冲级閺呮繂顪冮妶搴′航闁告﹢绠栧顐﹀冀閵娿倗绠氶梺缁樺姦娴滄粓鏁撶粣鏍ф处閳锋棃鏌涢弴銊ュ闁绘繂鐖奸弻娑㈠焺閸愵亝鍣銈庡亝濞茬喖寮婚悢鐓庣闁逛即娼у▓顓犵磼閻愵剙鍔ら柛姘儑閹广垹鈽夐姀鐘茶�垮┑鈽嗗灥濞咃綁宕濈粙搴撴斀闁炽儴娅曢埢鏇㈡煕閿濆繒绉�殿喖顭烽弫鎰板幢濡搫濡抽梻渚�娼х换鍫ュ春閸曨垰姹查柍銉︽灱閺�浠嬫煟濮楀棗鏋涢柣蹇ｄ邯閺屻劌顫濋幉瀣閻熸瑥瀚亸顓㈡倵濮橆厽绶叉い顐㈢箰鐓ゆい蹇撳椤斿洭鏌熼崗鑲╂殬闁搞劌顭疯棟闁靛鏅滈埛鎴犵磼鐎ｎ亜鐨￠柛鏃傚枑閵囧嫰顢橀悙闈涱杸闂佸搫鎳岄崕闈涱潖濞差亜浼犻柛鏇ㄥ櫘濞煎爼姊虹粙鍨劉闁绘搫绻濋獮鍐晸閻樻彃宓嗛梺闈涚箚閿熺晫顒查幏鐑藉醇閺囩喓鍘介梺褰掑亰閸樿偐寰婃繝姘厓闂佸灝顑嗛ˉ鍫ユ煛瀹�瀣М妞ゃ垺锚椤劑宕橀幐搴☆伓濠电娀娼ч鍛存嫅閻斿吋鐓ユ繝闈涙椤ョ偤鏌涙惔锝呮灈闁哄本娲熷畷鐓庘攽閸パ勵仱婵犳鍣徊濠氬垂閼姐倖顫曢柟鎯х摠婵潙霉閻樺樊鍎忛柟鐣屾暬閺岋綁濮�閳轰胶浠氶梺璺ㄥ枙濡嫮澹曢銏犳辈闁挎洖鍊归悡娆撴煟閹寸伝顏堟倿閻愵剛绠鹃悘蹇旂墬濞呭﹪鏌＄仦璇诧拷鏇㈡箒闁诲函缍嗛崑鍛存偟閺冨牊鈷戦悹鍥ｏ拷铏亶闂佹悶鍔屾晶搴ㄥ箲閵忕姭鏀介柛鈾�鏅涘▓顐︽⒑閸濆嫷鍎涢柛瀣閺佹挻鎱ㄩ幇顒婃嫹濠靛棛鏆﹂柣銏㈩暜閹风兘鏁愭惔婵堟寜闂佺尨鎷峰ù鐘差儐閻撳啴鏌曟径鍫濆闁绘繍浜為敓鐣屾嚀閹诧紕鎹㈤崼銉ヨ摕婵炴垯鍨圭粻鎶芥煙閹规劖鐝悹鍥╁仱閹鎲撮崟顒傤槬缂傚倸绉撮敃顏堝Υ娓氾拷瀵挳濮�閻欙拷濞煎﹪姊洪棃娑氱疄闁搞劏顕ч悾鍨媴閸︻厾鐦堥梺姹囧灲濞佳冩毄闂備浇妗ㄧ粈渚�骞夐敓鐘茬疄闁靛ň鏅涚粻缁樸亜閺冨洤浜归柨娑欑懇閹嘲顭ㄩ崨顓ф毉闁汇埄鍨辩敮鈥崇暦濞嗘挻鍋愰柛娆忓�瑰Λ鍐极閹版澘宸濇い鎾跺枑椤斿姊绘担鐟扳枙闁猴拷闁秴鍨傞柛褎顨呴拑鐔兼煟閺傚灝鎮戦柛銈呭暣閺屽秵娼悧鍫▊缂備緡鍠栭悥鐓庮潖濞差亜宸濆┑鐘插暟閸樹粙姊虹粙鍖℃敾婵炶尙鍠栧畷娲倷閸濆嫮顓洪梺鎸庢⒒缁垶寮查埡鍛拺闁稿繗鍋愰妶鎾煛閸滀椒绨芥俊鍙夊姍閹瑩鎮介悽纰夌闯濠电偞鎸婚懝鎯洪妶鍛瀺婵鎷烽柡灞剧☉铻ｉ柟绋垮瘨濡嫬顪冮妶鍡樼８闁稿酣娼ч悾鐑芥偄绾拌鲸鏅┑顔筋焾娴滎剟寮堕崨濠佺箚闁绘劦浜滈敓鑺ョ墱閺侇噣骞掑Δ锟界壕濠氭煕閳╁啨浜楅柨婵嗩槹閺呮悂鏌ㄩ悤鍌涘?
			MissionMajorScenario majorTask = new MissionMajorScenario( roleid, true );
			MissionConfig conf = majorTask.getConf();
			if ( conf == null )
				return;
			
		//	MissionConfig.MissionRewardInfo rewardInfo = conf.rewardInfo;
			if ( FairylandMgr.isInDreamMap(conf.exeIndo.mapID ) ) {
				fire.pb.mission.fairyland.FairylandMgr.getInstance().enterIntoDreamLand(roleid, conf.exeIndo.mapID, rolePos.getDynamicposx(), rolePos.getDynamicposy(),false,true );
			}
			
			return;
		//}
//		else {
//			int mapid = rolePos.getDynamicmap();
//			int posx = rolePos.getDynamicposx();
//			int posy = rolePos.getDynamicposy();
//			fire.pb.mission.dreamland.DreamLandManager.getInstance().enterIntoDreamLand(roleid, mapid, posx, posy,false,true);
//		}
	}

	// {{{ RPCGEN_DEFINE_BEGIN
	// {{{ DO NOT EDIT THIS
	public static final int PROTOCOL_TYPE = 805455;

	public int getType() {
		return 805455;
	}


	public CReturnFairyland() {
	}

	public final boolean _validator_() {
		return true;
	}

	public OctetsStream marshal(OctetsStream _os_) {
		if (!_validator_()) {
			throw new VerifyError("validator failed");
		}
		return _os_;
	}

	public OctetsStream unmarshal(OctetsStream _os_) throws MarshalException {
		if (!_validator_()) {
			throw new VerifyError("validator failed");
		}
		return _os_;
	}

	public boolean equals(Object _o1_) {
		if (_o1_ == this) return true;
		if (_o1_ instanceof CReturnFairyland) {
			return true;
		}
		return false;
	}

	public int hashCode() {
		int _h_ = 0;
		return _h_;
	}

	public String toString() {
		StringBuilder _sb_ = new StringBuilder();
		_sb_.append("(");
		_sb_.append(")");
		return _sb_.toString();
	}

	public int compareTo(CReturnFairyland _o_) {
		if (_o_ == this) return 0;
		int _c_ = 0;
		return _c_;
	}

	// DO NOT EDIT THIS }}}
	// RPCGEN_DEFINE_END }}}

}



package fire.pb.instancezone.bingfeng;
import fire.pb.util.DateValidate;
import mkdb.Procedure;

// {{{ RPCGEN_IMPORT_BEGIN
// {{{ DO NOT EDIT THIS
import com.locojoy.base.Marshal.OctetsStream;
import com.locojoy.base.Marshal.MarshalException;

abstract class __CCanEnterBingFeng__ extends mkio.Protocol { }

// DO NOT EDIT THIS }}}
// RPCGEN_IMPORT_END }}}

public class CCanEnterBingFeng extends __CCanEnterBingFeng__ {
	@Override
	protected void process() {
		// protocol handle
		final long roleid = gnet.link.Onlines.getInstance().findRoleid(this);
		if (roleid == -1)
			return;
		
		new mkdb.Procedure() {
			@Override
			protected boolean process() throws Exception {
				BingFengRole bingFengRole = new BingFengRole(roleid, true);
				if (bingFengRole.getBingFengRoleBean().getTimes() <= 0) {
					//婵犵數濮烽弫鍛婃叏閻戣棄鏋侀柛娑橈攻閸欏繘鏌ｉ幋锝嗩棄闁哄绶氶弻鐔兼⒒鐎靛壊妲紒鎯у⒔缁垳鎹㈠☉銏犵闁绘垵妫涢崝顖氣攽閻愭潙鐏︽い顓炴喘瀵娊宕卞☉娆戝幈闂佸搫娲㈤崝灞剧閻愭番浜滈柨鏃囶嚙楠炴牠鏌嶇憴鍕伌闁诡喒鏅濈槐鎺懳熸繝姘殬濠碉紕鍋戦崐鏍垂閻㈢绠犻幖娣灪濞呭繘姊绘担鍛婃儓閻炴凹鍋婂畷鏇㈠蓟閵夛箑浜楅梺缁樻煥閸氬鎮″☉銏＄厱閻忕偛褰炵欢閬嶆煕鎼存稑鍔滅紒缁樼洴瀹曞ジ濮�閻橆偅鐎伴梻浣告惈閺堫剟鎯勯鐐茬畺闁靛繈鍊栭悡銉╂倵閿濆簼绨奸柣锝咁煼濮婄粯鎷呴崨濠冨創闁荤偞鍑归崑濠傜暦閹邦儵鏃堝川椤撶姷宕跺┑鐘垫暩婵潙煤閵堝洦鍏滈柨鐔剁矙濮婅櫣绱掑Ο鍝勵潓濠碘槅鍨伴敃銈夆�﹂崶銊ｅ亝闁告劏鏂侀幏缁樼箾鏉堝墽鍒版繝锟介崡鐑囪�垮ù鐘差儐閻撴洟骞栧ǎ顒�濡洪柟鑼亾椤ㄣ儵鎮欑拠褍浼愬銈庡亝缁捇寮幘缁樺癄濠㈣埖锚濞堛劍绻濋悽闈浶ｇ痪鏉跨Ч瀵煡骞撻幒婵堝數闁荤姾娅ｇ亸銊╁礉閻斿吋鐓曢柡鍐╂尵閻ｈ鲸銇勯鍕殻濠碘�崇埣瀹曞崬螖閸涱厽鐤傞梻鍌欒兌閹虫捇宕查弻銉ュ簥闁哄被鍎遍悡姗�鏌熸潏鍓х暠闁诲繑濞婇弻锝夊箛椤栨侗妫勬繛瀵稿閸ｏ絽顫忓ú顏勪紶闁告洦鍘鹃崝鍦磽閸屾氨小缂佽埖鑹鹃锝夘敃閿曪拷缁犳稒銇勯幘璺烘瀻闁告柨鎳樺娲倷閽樺濮曢梺鍛婃尰閼归箖鈥﹂崶顒佸仼鐎癸拷閿熺晫澹曟禒瀣厱閻忕偛澧介幊鍛亜閿旇偐鐣甸柡灞剧〒閿熸枻缍嗘禍鐑界叕椤掍緡娈介柣鎰皺缁犲鏌℃担瑙勫磳闁轰焦鎹囬弫鎾绘晸閿燂拷?
					xbean.RoleBFInfo rolebingFengInfo = BingFengLandMgr.getInstance().getRoleBingFengInfo(roleid, 0, false);
					bingFengRole.getBingFengRoleBean().setTimes(bingFengRole.getBingFengRoleBean().getTimes() - 1);
					long currentTime = System.currentTimeMillis();
					
					//濠电姷鏁告慨鐑藉极閸涘﹥鍙忛柣鎴ｆ閺嬩線鏌涘☉姗堟敾闁告瑥绻橀弻锝夊箣濠垫劖缍楅梺璺ㄥ枙濡嫰宕愰崷顓犵焿闁圭儤妫戦幏鐑芥晲鎼粹�茬凹濠电偛鎳岄崹钘夘潖濞差亝鍤嶉柕澶婂枤娴滎亣妫熷銈嗙墱閸嬫稑效閺屻儲鈷戞い鎺炴嫹缂佸鏁婚幃锟犲Ψ閳哄倻鍘介梺鍝勫暙閸婅崵鏁☉娆嶄簻闁靛鍎哄Σ铏圭磼鏉堛劍灏い鎾炽偢瀹曨亪宕橀鐐村創濠德板�楁慨鐑藉磻濞戙垹鐤い鎰╁劤娴滀粙姊洪懡銈呅㈡繛娴嬫櫇娴滅鈻庨幋鐘靛箵闂佺粯鍔楅崕銈夊煕閹寸姵鍠愰柣妤�鐗嗙粭鎺懨瑰锟介崡鎶藉蓟濞戙垹绠婚悗闈涙啞閸Ｑ冾渻閵堝棙绌跨紒韫矙閹箖鏁撻悩宕囧姺闂佹寧妫佸Λ鍕儊濠婂牊鈷掑〒姘炬嫹婵炰匠鍥ㄥ亱闁糕剝銇傚☉妯锋婵炲棙鍔栭悵宄邦渻閵堝棗绗掗柛濠咁嚙铻炴い鏍仦閻撴稑顭跨捄鍝勵劉缁绢厼鐖煎顐﹀醇閵夛腹鎷虹紓鍌欑劍钃遍柟顖氬閺屾盯骞樼捄鐑樼亪闂侀潧妫旂粈浣界亙闂佸憡渚楅崢楣兯囬弶娆炬富闁靛牆妫楃粭鎺楁煕婵犲啯鍊愰柣娑卞櫍瀹曞ジ鎮㈤搹鍦婵犵數鍋涢悧鍡涙倶濠靛鍑犻柣鏂垮悑閻撱儵鏌￠崶顭戞畷婵炲懎锕﹂敓鍊燁潐濞叉鍒掑畝鍕厺閹兼番鍔岀粻濠氭煙閹绘帩鍎愰悗姘秺閺屾盯骞囬埡浣肝ㄩ梺鍝勵儏闁帮綁寮婚悢鐚存嫹閻㈡鐒鹃崯鎼佹⒑閹稿海鈾佺紒顔芥尭椤繐煤椤忓嫪绱堕梺鍛婃处閸嬫捇骞忛悜鑺ュ癄濠㈣泛妫欓悘鍐⒑閸濆嫭鍌ㄩ柛銊ユ贡缁煤椤忓懐鍘藉┑鈽嗗灣閳峰牓寮冲鍫熺厵濡炲楠搁崢瀛樹繆椤愩垹鏆欓柍钘夘槸铻ｉ柤娴嬫櫆閺呫劑姊婚崒娆掑厡闁硅櫕鎹囧畷鐢稿冀椤撶偟顔嗛梺璺ㄥ櫐閹凤拷?,闂傚倸鍊搁崐鎼佸磹閹间礁纾归柟闂寸绾剧懓顪冪�ｎ亝鎹ｉ柣顓炴閵嗘帒顫濋悙顒�顏舵俊銈囧Х閸嬫盯藝閻㈢鏋佺�广儱顦粈瀣亜閹哄秶鍔嶆い鏂挎处缁绘繂顕ラ柨瀣凡闁跨喕濮ゅú鐔肩嵁婵犲懐鐤�婵炴垶顭囬敍娑㈡⒑閹稿海鈽夐悗姘煎弮瀹曚即骞囬鍡樺妤犵偛鐏濋崝姘箾鐏炲倸锟芥洟顢氶敐澶婅摕闁靛鑵归幏缁樼箾鏉堝墽瀵奸悹锟介敃锟介…鍥箳濡や胶鍘遍梺鍝勬川閸嬬喐绂掑☉銏＄厽闁挎繂鎳庨。宕囩磼鏉堛劍灏伴柟宄版嚇瀹曨偊宕熼幋顖滃埌闁宠鍨块幃娆戞嫚瑜戦崥顐︽倵濞堝灝鏋涙い顓炲槻椤曪綁骞橀钘変簻婵＄偛顑呭ù鐑芥偘椤曪拷濮婄粯鎷呯粙娆炬闂佺顑呴幊鎰板箲閵忋倕纾奸柣鎰ㄦ櫔閹风兘寮介顒佸闁挎繂楠告晶鎵棯閹规劖顥夐棁澶愭煥濠靛棙鍣洪柟顖氱墦瀵粙鏁撻悩鏂ユ嫼缂傚倷鐒﹁摫闁诡垰鐗忕槐鎺旂磼濡偐鐣靛銈嗘穿缁插潡骞忛悩瑁佸湱锟斤綆鍋掑鏃堟⒒娓氾拷濞佳呮崲閹烘挻鍙忛柛顐犲劚鎯熼悷婊冮叄瀹曚即骞囬鍡樺妤犵偛鐏濋崝姘繆椤愶絿娲撮柕鍡楁嚇閹粓鎳為妷褍骞嶉梻浣虹帛閸ㄦ儼鎽梺鎶芥敱鐢偤鎯�椤忓牆绠氱憸宥夊箖閹存劲搴ㄥ炊瑜濋煬顒�鈹戦埄鍐ㄥ姸缂佺姵鐩顒�鈻庨崣銉у濠电姷顣槐鏇㈠磻閹达箑纾圭憸搴㈢┍婵犲洤鐐婃い鎺炴嫹闁哄绀侀埞鎴︽偐閾忣偆娈ら悗瑙勬尫缁�渚�鍩為幋锔藉亹闂婎偒鍙�閹舵姊洪崫鍕殭闁绘妫楅蹇撯攽閸ャ儰绨婚梺鍝勫暙濞层倖绂嶇憴鍕箚缂備降鍨归弸娑㈡煃鐟欏嫬鐏撮柟顔规櫊椤㈡瑩鎳栭埡锟界槐妯荤節閻㈤潧浠滄い锔垮嵆閹嫰顢涢悙鍙夌�梺鍛婂姦閸犳牕鏁梻渚�娼чˇ顓㈠垂濞差亝鍊垫繛宸簼閳锋垿鏌涘☉姗堝伐濠殿噯绠撻弻娑㈡偐閹颁焦鐤侀梺绯曟櫆閻╊垶鐛�ｎ喗鏅滈柣锝呰嫰楠炴姊绘担铏瑰笡婵﹤顭烽垾锕傚醇閵夊顦遍敓鏂ょ秵閿熷鍨圭紞濠囧箖閳轰胶鏆﹂柛銉ｅ妼閸ㄩ亶姊绘担鍛婃儓闁活剙銈稿畷浼村冀瑜忛弳锕傛煏婵犲繐顩紒鈽呮嫹闂備礁鎲￠崝锕傛偂婢舵劕绠柣鎴ｆ缁犳稒銇勯弴鐐搭棡閻庢艾缍婇幃宄扳枎韫囨搩浠炬繝銏ｆ硾鐎氫即寮诲☉銏犖╅柕澹啰鍘芥俊銈囧Х閸嬬偤鎮ч悙鍝勎﹂柟鐗堟緲缁犳娊鏌熼幑鎰【濠殿噣鏀辩换婵嬫偨闂堟稐娌梺鎼炲妼閻栧ジ骞婂┑瀣�锋い鎺嶇劍閻濈兘姊虹拠鈥崇�婚柨鐔剁矙瀵劍绂掔�ｎ偆鍘介梺褰掑亰閸ㄤ即鎮￠幇顔藉枑闁硅泛锕ら幊鎰婵傚憡顥婃い鎰靛亜楠炴﹢鏌ｉ鐔烘噭妞ゃ劊鍎甸幃娆戯拷鐢殿焾閳峰苯顪冮妶鍐ㄧ仾婵炶尙鍠愭穱濠囧醇閺囩偟鍊為悷婊冪Ф閹叉挳鏁冮敓浠嬪煘閹寸偛绠犻梺绋磕涢崨顓犵瓘婵炲濮撮鍛存偪椤斿浜滈柟鎵虫櫅閿熻姤顨嗙粙澶婎吋閸ャ劌鏋戦梺缁橆殔閻楀棛绮鑸电厽闁规儳鐡ㄧ粈瀣煛鐏炵偓绀冪�垫澘瀚板畷鐓庘攽閸℃娼涢梻鍌欐祰閸嬫劙鈥﹂崼銏㈢濠电姴娲ら拑鐔哥箾閹寸偟鎳呯紒鈽呮嫹闂備胶顭堢悮顐﹀磹濡ゅ懎瑙﹂悗锝庡枟閸婄敻鎮峰▎蹇擃仾濠㈣泛瀚伴弻娑㈠Ω閵壯冪厽閻庢鍣崑濠囩嵁濡偐纾兼俊顖滅帛椤忕喖姊绘担鑺ョ《闁革綇绠撻獮蹇涙晸閿燂拷
					if (DateValidate.inTheSameDay(currentTime, rolebingFengInfo.getLastchangetime())) {
						SCanEnterBingFeng scanenter = new SCanEnterBingFeng();
						scanenter.finish = 1;
						
						Procedure.psendWhileCommit(roleid, scanenter);
						return true;
					}
				}
				
				//濠电姷鏁告慨鐑藉极閸涘﹥鍙忛柣鎴ｆ閺嬩線鏌熼梻瀵割槮缁炬儳顭烽弻锝夊箛椤掍焦鍎撻梺鎼炲妼閸婂潡寮诲☉銏╂晝闁挎繂妫涢ˇ銉х磽娴ｅ搫小闁告濞婂璇测槈濡攱鏂�闂佸憡娲﹂崑鍕叏閵忋倖鈷戞繛鑼额嚙楠炴鏌熼悷鐗堟悙妞ゎ偄绻戠换婵嗩潩椤掑嫬鏁归梻浣虹帛閺屻劑宕查弻銉у祦闊洦绋掗埛鎴︽煙缁嬫寧鎹ｇ紒鐘虫尰閵囧嫰鏁傜拠鑼化缂備緡鍠栭…鐑藉箖閻戣棄绠犲┑鐘插�荤粔娲煛娴ｇ懓濮嶇�规洏鍔戦、娆撳礂閸忚偐鏆梻浣筋嚙濮橈箓锝炴径鎰闁告縿鍎抽惌鎾绘煟閻旂厧浜版繛鍏肩墬缁绘稑顔忛鑽ゅ嚬濡炪們鍎遍悧濠勬崲濞戙垹绠ｉ柨婵嗗閹牓姊洪崨濠冣拹闁诡喖鍊搁～蹇涙惞閸︻厾鐓撻梺鍓茬厛閸ｎ噣宕濇径鎰拺缂備焦蓱鐏忋劑鏌ㄩ悢缁橆棄缁剧虎鍙冨鎶芥晝閸屾稓鍘甸梺缁橆殔閻楀﹦娆㈤懠顒傛／妞ゆ挶鍔嶇�氬綊姊婚崒娆掑厡缂侇噮鍨跺畷婵婄疀濞戞鏌у┑鐘诧工閻楃偟绱為弽顐嫹楠炲灝鍔氭い锔垮嵆閸╂盯骞嬮敂钘変化闂佽鍘界敮鎺撲繆閸忚偐绠鹃柛娑卞枛婵秹鏌″畝锟介崰鏍х暦濞嗘挸围闁糕剝顨忔导锟�?濠电姷鏁告慨鐑藉极閸涘﹥鍙忛柣鎴ｆ閺嬩線鏌涘☉姗堝伐闁搞劍姊归妵鍕箻鐠哄搫澹夐梺缁樻煥濡濡撮幒鎴僵闁绘劦鍓欓鑸典繆閵堝洤啸闁稿绋撻幑銏狀潨閿熻棄顕ｉ锕�绠荤紓浣股戝▍銏ゆ⒑鐠恒劌娅愰柟鍑ゆ嫹?,闂傚倸鍊搁崐鎼佸磹閹间礁纾归柟闂寸绾惧綊鏌ｉ幋锝呅撻柛銈呭閺屾盯顢曢敐鍡欘槬缂備胶濮锋繛锟介柡宀�鍠栧畷婊嗩槾閻㈩垱鐩弻娑氾拷锝冨妼閿熻姤绻堝濠氬即閻旇櫣顔曢梺缁樺姦閸撴岸鎮甸弴銏♀拺缂佸顑欓崕蹇斻亜閹存繍妯�鐎殿喖顭锋俊鎼佸煛閸屾矮绨介梻浣侯焾閺堫剛绮欓幋锔绘晜闁跨噦鎷�?闂傚倸鍊搁崐鎼佸磹閹间礁纾瑰瀣捣閻棗銆掑鐐濡ょ姷鍋涢ˇ鐢稿春閸曨垰绀冩い蹇撴閸ゅ本绻濆閿嬫緲閿熻姤娲熼獮濠冩償閵婏腹鎷诲銈嗙墬缁嬪繑绂嶅鍫熺厸闁搞儲婀圭花濂告倵濮橆剛绉洪柟顔筋殘閹叉挳宕熼鍌ゆО闂備焦鎮堕崝宀勫Χ濮濆本顥ら柣鐔哥矌婢ф鏁Δ鍛亗婵炴垯鍨洪崐鍫曟煟閹邦収鍟忛柣鎺撳劤椤儻顦抽柣鎿勭節瀵鎮㈡搴㈡疂闂佺粯顨呴悧鍡椻枔濡ゅ懏鍊甸悷娆忓婢跺嫰鏌涚�ｎ亷宸ラ柣锝囧厴閹垽鎮℃惔锛勶拷顓烆渻閵堝棗濮х紒鎻掔仢鍗辨慨妤嬫嫹婵﹤顭峰畷鎺戭潩椤掑﹥瀚归柣鎴ｅГ閸婂潡鏌ㄩ弴鐐诧拷褰掑磿閹寸姵鍠愰柣妤�鐗嗙粭鎺旂棯閹勫仴婵﹥妞介、妤呮晸閻ｅ瞼鐭撻悗闈涙憸娑撳秹鏌ｅΟ鍝勫笭缂佽妫欓妵鍕冀閵娧勫櫙濡炪倖甯為崰鏍蓟濞戙垹围闁糕剝顭囬ˇ浼存⒑閸濆嫭婀伴柣鈺婂灦閸ㄩ箖鏁冮崒姘鳖吅濠电娀娼ч幊鎰版儎鎼达絿纾介柛灞剧懅椤︼箑顭胯闁帮絽鐣烽幋锕�围濠㈣泛锕﹂悾鍝勨攽椤旂瓔娈ｉ柟椋庡厴閺岀喖顢欓悾灞惧櫚濠碘槅鍋勯崯顐﹀煡婢跺á鏃堟晸娴犲瑤澶婎潩椤撶姷鐦堥梺姹囧灲濞佳勭濠婂牊鐓熸俊銈忔嫹閻庢碍婢橀悾椋庢喆閸曨収娴勯柣搴秵娴滐綁骞楅弴銏♀拺闁圭娴风粻鎾翠繆椤愶絿鎳囩�规洘娲熼幃銏ゅ箹閻愭壆鐩庨梻浣告惈缁夋煡宕濇惔銊ョ叀濠㈣泛顑冩禍婊堢叓閸ャ儱鍔滈悗姘炬嫹?,闂傚倸鍊搁崐鎼佸磹閹间礁纾归柟闂寸绾惧綊鏌熼梻瀵割槮缁惧墽鎳撻—鍐拷锝庝簻椤掋垺銇勯幇顏嗙煓闁哄被鍔戦幃銏ゅ传閸曟垯鍨荤槐鎺楀箛椤撗勭暦缂備胶绮惄顖炵嵁鐎ｎ喗鍊婚柛鈩冪懃婵鲸绻濋悽闈涗沪闁割煈鍨跺畷褰掑捶椤撶姷鐒奸柣搴秵閸嬩焦绂嶅鍫熺厸闁告劑鍔嶆径鍕煏閸℃鏆為柟渚垮妿閹叉挳宕熼崹顐ゆ澒婵犳鍠栭敃銉ヮ渻閽樺鏆﹂柕濠忓缁★拷闂佸憡娲﹂崜娆忊枍閹寸偘绻嗛柣鎰典簻閿熺獤鍛笉闁规儳顕々鏌ユ煕椤愶絾绀�鏉╂繈姊洪崨濠勨槈闁宦板姂瀹曟劖绻濆顓犲幘闂佽鍘界敮鎺楀礉閵堝鐓曟慨妤�妫旂花鑲╃磼缂佹绠炲┑顕嗘嫹闂佹寧绻傚Λ娑㈠Υ閹扮増鈷戠紓浣癸供濞堟梹淇婇锝囩畵闁伙絽鍢查埞鎴﹀幢閳哄倸鍏婇梻浣哄帶閹芥粓寮幖浣稿偍闁归棿鐒﹂埛鎴︽煕濞戞﹫姊楃紒鍫曚憾閺屾盯鎮╅崘鎻掓懙濡ょ姷鍋涢敃顏勭暦閸洦鏁嗗ù锝呮惈楠炴劙鏌ｆ惔锝嗩仧闁归鍏橀弻銊╂偄閸撲胶鐓撻悗瑙勬磻閸楀啿顕ｆ禒瀣垫晣闁绘劕顕敓绛嬪墴濮婃椽鎮烽弶搴撴寖缂備緡鍣崹璺侯嚕閺屻儱绠瑰ù锝呮贡閸欏棝姊虹紒妯荤闁稿﹤婀遍敓鑺ョ啲閹凤拷?
				SCanEnterBingFeng scanenter = new SCanEnterBingFeng();
				scanenter.finish = 0;
				Procedure.psendWhileCommit(roleid, scanenter);
				return true;
			}
			
		}.submit();
	}

	// {{{ RPCGEN_DEFINE_BEGIN
	// {{{ DO NOT EDIT THIS
	public static final int PROTOCOL_TYPE = 804557;

	public int getType() {
		return 804557;
	}


	public CCanEnterBingFeng() {
	}

	public final boolean _validator_() {
		return true;
	}

	public OctetsStream marshal(OctetsStream _os_) {
		if (!_validator_()) {
			throw new VerifyError("validator failed");
		}
		return _os_;
	}

	public OctetsStream unmarshal(OctetsStream _os_) throws MarshalException {
		if (!_validator_()) {
			throw new VerifyError("validator failed");
		}
		return _os_;
	}

	public boolean equals(Object _o1_) {
		if (_o1_ == this) return true;
		if (_o1_ instanceof CCanEnterBingFeng) {
			return true;
		}
		return false;
	}

	public int hashCode() {
		int _h_ = 0;
		return _h_;
	}

	public String toString() {
		StringBuilder _sb_ = new StringBuilder();
		_sb_.append("(");
		_sb_.append(")");
		return _sb_.toString();
	}

	public int compareTo(CCanEnterBingFeng _o_) {
		if (_o_ == this) return 0;
		int _c_ = 0;
		return _c_;
	}

	// DO NOT EDIT THIS }}}
	// RPCGEN_DEFINE_END }}}

}


<project name="server">

	
	<!--
	init		第一次必须用这个，除了genfiles外，还生成mhsdcounter.jar
	
	genfiles	生成所有文件，包括genrpc,genxdb,gengbeans
	
	genrpc 		只生成所有协议相关的文件
	genxdb 		只生成xdb相关的xtable、xbean等Java文件
	gengbeans 	只生成策划配置相关的Java文件

	robot		生成最新的机器人
	
	dist		编译打包服务器时使用
	-->

  <!-- 相对于本build.xml -->
  <property name="snail.bin" value="./snailbin"/>
  <property name="serverbindir" value="../../serverbin"/>
  <property name="mt3dir" value="../../.."/>
  
  <!--检查conf.m4是否存在-->
  <target name="checkconf">
  		<fail message="请先填写conf.m4">
     		<condition>
	 			<not>
					<resourceexists>
						<file file="conf.m4"/>
					</resourceexists>
	 			</not>		
     		</condition>
		</fail>
  </target>
  
  
  <!--生成所有协议相关的文件-->
  <target name="genrpc" depends="checkconf">    
    	<!-- 生sizepolicyconf -->
    	<java jar="rpcgen.jar" fork="true">
    	  <arg line="-aio -sizepolicyconf linksize.xml"/>
    	</java>
    	<delete dir="gclient" />
    	
    	<!-- 生服务器所需要的java文件，同时生成第一阶段的gs/gs.xio.xml -->
   	 	<delete dir="gs/beans" />
    	<delete file="gs/gs.xio.xml" />
    	<java jar="rpcgen.jar" fork="true">
     		<arg line="-outputEncoding utf-8 -inputEncoding utf-8  -validateMarshal -validateUnmarshal -java protocol.main.xml"/>
    	</java>
    	
    	<!-- 根据第一阶段的gs/gs.xio.xml生成gs/gs.xio.xml.m4 -->
    	<delete file="xml.tmp" />
    	<xslt in="gs/gs.xio.xml" out="xml.tmp" style="xsl/gs.xio.xml.xsl" />
    	<concat destfile="gs/gs.xio.xml.m4" outputencoding="utf-8" encoding="utf-8" >
			<filelist files="xsl/gsxio.header.m4,xml.tmp"/>
    	</concat>
    	
    	<!-- 生成最终版的的gs/gs.xio.xml -->
    	<condition property="m4bin" value="bin/m4.exe" else="m4">
		 		<os family="windows"/>
		</condition>
    	<exec executable="${m4bin}" output="gs/gs.xio.xml">
				<arg line="-I. gs/gs.xio.xml.m4"/>		
		</exec>
  </target>
  
  <target name="confm4">
  		<copy overwrite="true" tofile="conf.m4" file="conf.m4.sample" /> 
  </target>
  <!--编译打包服务器时使用robot-->
  <target name="copyfile2serverbin">
	<copy overwrite="true" todir="${serverbindir}/gs" file="gs/gs.xio.xml.m4" /> 
  </target>
  <target name="dist" depends="confm4,genfiles">  
    	<ant dir="gs" target="dist"/>
    	
    	<!--copy overwrite="true" todir="../robot" file="robot/robot.msg.xml" /> 
    	<copy overwrite="true" todir="../robot/dist" file="robot/dist/robot.jar" /--> 
			<copy overwrite="true" todir="${serverbindir}/gs" file="gs/gs.xio.xml.m4" /> 
			<copy overwrite="true" todir="${serverbindir}/gs" file="gs/gsx.mkdb.xml.m4" /> 
			<copy overwrite="true" tofile="${serverbindir}/gs/gsxdb.jar" file="gs/dist/gs.jar" />
			<copy overwrite="true" todir="${serverbindir}" file="conf.m4.sample" />
			<copy overwrite="true" todir="${serverbindir}/gs/lib" >    
				<fileset dir="gs/lib">
					<include name="**/*.jar" />
				</fileset>
			</copy>
	
			<copy overwrite="true" todir="${serverbindir}/gs/" file="bakscaner/data/snapshot.conf" />  
	 		<!-- properties文件从gamedata移到gs下面 -->
			<copy overwrite="true" todir="${serverbindir}/gs/properties" >    
				<fileset dir="gs/properties">
					<include name="**/*.properties" />
				</fileset>
			</copy>
			<copy overwrite="true" todir="${serverbindir}/gs/gamedata" >    
				<fileset dir="gs/gamedata">
					<include name="**/*.*" />
				</fileset>
			</copy>
			<copy overwrite="true" todir="${serverbindir}/gs/libsys" >    
				<fileset dir="gs/libsys">
					<include name="**/*.jar" />
				</fileset>
			</copy>
			<copy overwrite="true" todir="${serverbindir}/gs/" file="gs/gs.xio.xml" />
			<copy overwrite="true" todir="${serverbindir}/gs/" file="gs/gsx.mkdb.xml" />
			<copy overwrite="true" todir="${serverbindir}/gs/" file="gs/db_amd64.dll" />
			<copy overwrite="true" todir="${serverbindir}/gs/" file="gs/dist/xbean.jar" />
			<copy overwrite="true" todir="${serverbindir}/gs/" file="gs/dist/gsencry.jar" />
			<copy overwrite="true" todir="${serverbindir}/gs/" file="gs/log4j2.xml" />
			<copy overwrite="true" todir="${serverbindir}/gs/" file="gs/log4j.xml" />
	
    	<copy overwrite="true" todir="${serverbindir}/uniqname" file="gs/lib/monkeyking.jar" />
    	<copy overwrite="true" todir="${serverbindir}/link/" file="sizepolicy.conf" />    
			<delete file="xml.tmp" />
    	<xslt in="uniqname.xdb.xml" out="xml.tmp" style="xsl/uniq.xdb.xml.xsl" />
    	<concat destfile="${serverbindir}/uniqname/uniqname.xdb.xml.m4" outputencoding="utf-8" encoding="utf-8" >
       	<filelist files="xsl/header.m4,xml.tmp"/>
    	</concat>
    	<delete file="xml.tmp" />
  </target>
  
  <!--生成xdb相关的xtable、xbean等Java文件-->
  <target name="genxdb" depends="checkconf">
  		<condition property="m4bin" value="bin/m4.exe" else="m4">
		 		<os family="windows"/>
			</condition>
			<exec executable="${m4bin}" output="gs/gsx.mkdb.xml">
				<arg line="-I. gs/gsx.mkdb.xml.m4"/>		
			</exec>
    	<ant dir="gs" target="genxdb"/>
  </target>
  
  <!--生成配置相关的Java文件-->
  <target name="gengbeans">
		<copy overwrite="true" todir="gs/gamedata/xml/gbeans">
			<fileset dir="${mt3dir}/gbeans">
				<include name="*.*" />
			</fileset>
		</copy>
		<copy overwrite="true" todir="${serverbindir}/gs/gamedata/xml/gbeans">
			<fileset dir="${mt3dir}/gbeans">
				<include name="*.*" />
			</fileset>
		</copy>
		<ant dir="gs" target="genbean"/>
		<!-- 先从serverbin下把导表工具导出的表拷贝到gs下 -->
		<copy overwrite="true" todir="gs/gamedata/xml/auto">
			<fileset dir="${serverbindir}/gs/gamedata/xml/auto">
				<include name="*.*" />
			</fileset>
		</copy>
  </target>
  
  <!--生成所有相关文件-->
  <target name="genfiles" depends="genrpc,genxdb,gengbeans,jsconvert">
  </target>
	
	<!--重新编译robot测试机器人-->
	<target name="robot">
		<java jar="rpcgen.jar" fork="true">
			<arg line="-outputEncoding utf-8 -inputEncoding utf-8  -validateMarshal -validateUnmarshal -java robot.xml"/>
		</java>
		<ant dir="robot" target="dist" />
	</target>
	
	<target name="jsconvert"> 
      	<java jar="gs/jsconvert.jar" fork="true"/>
	</target>
	
  <!--本地生成所有相关代码时用-->
  <target name="init" depends="genfiles">
		<delete file="xml.tmp" />	
  </target>
  
</project>  

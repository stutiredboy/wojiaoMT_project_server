package xtable;

public final class Locks {

	public static final mkdb.TTable<?,?> ACCUSATIONINFOS = _Tables_.getInstance().accusationinfos; // 
	public static final mkdb.TTable<?,?> ACTIVEROLETABLE = _Tables_.getInstance().activeroletable; // 
	public static final mkdb.TTable<?,?> ACTIVEUSERTABLE = _Tables_.getInstance().activeusertable; // 
	public static final mkdb.TTable<?,?> ACTIVITYTABLE = _Tables_.getInstance().activitytable; // 
	public static final mkdb.TTable<?,?> APPSTORETIDSTATUS = _Tables_.getInstance().appstoretidstatus; // 
	public static final mkdb.TTable<?,?> ARCHMAPS = _Tables_.getInstance().archmaps; // 
	public static final mkdb.TTable<?,?> AUUSERINFO = _Tables_.getInstance().auuserinfo; // 
	public static final mkdb.TTable<?,?> AWARDITEMLIMIT = _Tables_.getInstance().awarditemlimit; // 
	public static final mkdb.TTable<?,?> BATTLE = _Tables_.getInstance().battle; // 
	public static final mkdb.TTable<?,?> BATTLEMELONID2MELON = _Tables_.getInstance().battlemelonid2melon; // 
	public static final mkdb.TTable<?,?> BEGINNERTIP = _Tables_.getInstance().beginnertip; // 
	public static final mkdb.TTable<?,?> BESTOWNPC = _Tables_.getInstance().bestownpc; // 
	public static final mkdb.TTable<?,?> BIANJIETEAM = _Tables_.getInstance().bianjieteam; // 
	public static final mkdb.TTable<?,?> BINGFENGINFOS = _Tables_.getInstance().bingfenginfos; // 
	public static final mkdb.TTable<?,?> BINGFENGLISTS = _Tables_.getInstance().bingfenglists; // 
	public static final mkdb.TTable<?,?> BINGFENGWANGZUOS = _Tables_.getInstance().bingfengwangzuos; // 
	public static final mkdb.TTable<?,?> BROADCASTMSGTAB = _Tables_.getInstance().broadcastmsgtab; // 
	public static final mkdb.TTable<?,?> CHARGEORDER = _Tables_.getInstance().chargeorder; // 
	public static final mkdb.TTable<?,?> CHATTIMETAB = _Tables_.getInstance().chattimetab; // 
	public static final mkdb.TTable<?,?> CLANFIGHTHISTROYLIST = _Tables_.getInstance().clanfighthistroylist; // 
	public static final mkdb.TTable<?,?> CLANFIGHTIDLOCK = _Tables_.getInstance().clanfightbattlefield; // 
	public static final mkdb.TTable<?,?> CLANFIGHTRACELIST = _Tables_.getInstance().clanfightracelist; // 
	public static final mkdb.TTable<?,?> CLANFIGHTS = _Tables_.getInstance().clanfights; // 
	public static final mkdb.TTable<?,?> CLANINDEX = _Tables_.getInstance().clanindex; // 
	public static final mkdb.TTable<?,?> CLANINSTANCES = _Tables_.getInstance().claninstances; // 
	public static final mkdb.TTable<?,?> CLANINSTBESTLEVEL = _Tables_.getInstance().claninstbestlevel; // 
	public static final mkdb.TTable<?,?> CLANPROGRESSRANKLIST = _Tables_.getInstance().clanprogressranklist; // 
	public static final mkdb.TTable<?,?> CLANRANKLIST = _Tables_.getInstance().clanranklist; // 
	public static final mkdb.TTable<?,?> CLANS = _Tables_.getInstance().clanid2clanfightids; // clans  
	public static final mkdb.TTable<?,?> CLANWEEKNUMTAB = _Tables_.getInstance().clanweeknumtab; // 
	public static final mkdb.TTable<?,?> CLANZONGHELIST = _Tables_.getInstance().clanzonghelist; // 
	public static final mkdb.TTable<?,?> COMPENSATION = _Tables_.getInstance().compensation; // 
	public static final mkdb.TTable<?,?> COMPENSATIONROLES = _Tables_.getInstance().compensationroles; // 
	public static final mkdb.TTable<?,?> COURSES = _Tables_.getInstance().courses; // 
	public static final mkdb.TTable<?,?> ENHANCEMENT = _Tables_.getInstance().enhancement; // 
	public static final mkdb.TTable<?,?> EQUIPS = _Tables_.getInstance().equips; // 
	public static final mkdb.TTable<?,?> EQUIPTAB = _Tables_.getInstance().equiptab; // 
	public static final mkdb.TTable<?,?> EVENTNPCINFOTABLE = _Tables_.getInstance().eventnpcinfotable; // 
	public static final mkdb.TTable<?,?> FAILEDCHARGEORDER = _Tables_.getInstance().failedchargeorder; // 
	public static final mkdb.TTable<?,?> FUNOPENCLOSETAB = _Tables_.getInstance().funopenclosetab; // 
	public static final mkdb.TTable<?,?> FUTURELOCK = _Tables_.getInstance().timerfutures; // 
	public static final mkdb.TTable<?,?> GACDPIC = _Tables_.getInstance().gacdpic; // 
	public static final mkdb.TTable<?,?> GATHER = _Tables_.getInstance().gather; // 
	public static final mkdb.TTable<?,?> GETROLESCALLBACK = _Tables_.getInstance().getrolescallback; // 
	public static final mkdb.TTable<?,?> GIVEFLOWERLIST = _Tables_.getInstance().giveflowerlist; // 
	public static final mkdb.TTable<?,?> GMCREATENPCUNIVERSAL = _Tables_.getInstance().gmcreatenpcuniversal; // 
	public static final mkdb.TTable<?,?> HUOBANPROPERTY = _Tables_.getInstance().huobanproperty; // 
	public static final mkdb.TTable<?,?> HUOBANVIPS = _Tables_.getInstance().huobanvips; // 
	public static final mkdb.TTable<?,?> IMPEXAMSTATETBL = _Tables_.getInstance().impexamstatetbl; // 
	public static final mkdb.TTable<?,?> INSTANCEACTIVITYS = _Tables_.getInstance().instanceactivitys; // 
	public static final mkdb.TTable<?,?> INSTANCEFUTURE = _Tables_.getInstance().instancefuture; // 
	public static final mkdb.TTable<?,?> INSTANCETASK = _Tables_.getInstance().instancetask; // 
	public static final mkdb.TTable<?,?> INSTANCETURNGROUPS = _Tables_.getInstance().instanceturngroups; // 
	public static final mkdb.TTable<?,?> INSTANCEZONES = _Tables_.getInstance().instancezones; // 
	public static final mkdb.TTable<?,?> ITEMRECYCLEBIN = _Tables_.getInstance().itemrecyclebin; // 
	public static final mkdb.TTable<?,?> ITEMRECYCLEIDX = _Tables_.getInstance().itemrecycleidx; // 
	public static final mkdb.TTable<?,?> LDVIDEOHISLISTTAB = _Tables_.getInstance().ldvideohislisttab; // 
	public static final mkdb.TTable<?,?> LDVIDEOROLEINFODESLISTTAB = _Tables_.getInstance().ldvideoroleinfodeslisttab; // 
	public static final mkdb.TTable<?,?> LEVELSEAL = _Tables_.getInstance().levelseal; // 
	public static final mkdb.TTable<?,?> LIVEDIEWEEKNUMTAB = _Tables_.getInstance().livedieweeknumtab; // 
	public static final mkdb.TTable<?,?> MARKETATTENTIONGOODSTAB = _Tables_.getInstance().marketattentiongoodstab; // 
	public static final mkdb.TTable<?,?> MARKETATTENTIONROLETAB = _Tables_.getInstance().marketattentionroletab; // 
	public static final mkdb.TTable<?,?> MARKETFLOATINGTAB = _Tables_.getInstance().marketfloatingtab; // 
	public static final mkdb.TTable<?,?> MEDICITEMLISTTAB = _Tables_.getInstance().medicitemlisttab; // 
	public static final mkdb.TTable<?,?> MENTORLOCK = _Tables_.getInstance().apprents; // 
	public static final mkdb.TTable<?,?> MISSIONCAMERAS = _Tables_.getInstance().missioncameras; // 
	public static final mkdb.TTable<?,?> NORMALTAB = _Tables_.getInstance().normaltab; // 
	public static final mkdb.TTable<?,?> NOTIFY = _Tables_.getInstance().notify; // 
	public static final mkdb.TTable<?,?> NPCBATTLEINFO = _Tables_.getInstance().npcbattleinfo; // 
	public static final mkdb.TTable<?,?> NPCFIGHTNUM = _Tables_.getInstance().npcfightnum; // 
	public static final mkdb.TTable<?,?> NPCS = _Tables_.getInstance().npcs; // 
	public static final mkdb.TTable<?,?> NPCSALEBUSINESSTAB = _Tables_.getInstance().npcsalebusinesstab; // 
	public static final mkdb.TTable<?,?> OPENSCHOOLWHEELTABLE = _Tables_.getInstance().openschoolwheeltable; // 
	public static final mkdb.TTable<?,?> OPENTRADERWHEELTABLE = _Tables_.getInstance().opentraderwheeltable; // 
	public static final mkdb.TTable<?,?> OPENTREASUREMAPTABLE = _Tables_.getInstance().opentreasuremaptable; // 
	public static final mkdb.TTable<?,?> ORDERIDTAB = _Tables_.getInstance().orderidtab; // 
	public static final mkdb.TTable<?,?> PAYPLATFORM = _Tables_.getInstance().payplatform; // 
	public static final mkdb.TTable<?,?> PETRECYCLEBIN = _Tables_.getInstance().petrecyclebin; // 
	public static final mkdb.TTable<?,?> PETSCORELIST = _Tables_.getInstance().petscorelist; // 
	public static final mkdb.TTable<?,?> PETTAB = _Tables_.getInstance().pettab; // 
	public static final mkdb.TTable<?,?> PLATORDERHISTROY = _Tables_.getInstance().platorderhistroy; // 
	public static final mkdb.TTable<?,?> PRESELLTAB = _Tables_.getInstance().preselltab; // 
	public static final mkdb.TTable<?,?> PROFESSIONLEADER = _Tables_.getInstance().professionleader; // 
	public static final mkdb.TTable<?,?> PROFESSIONLEADERCANDIDATES = _Tables_.getInstance().professionleadercandidates; // 
	public static final mkdb.TTable<?,?> PROFESSIONLEADERFIGHTDATA = _Tables_.getInstance().professionleaderfightdata; // 
	public static final mkdb.TTable<?,?> PROFESSIONLEADERVOTECHALLENGE = _Tables_.getInstance().professionleadervotechallenge; // 
	public static final mkdb.TTable<?,?> PROGRESSBARTABLE = _Tables_.getInstance().progressbartable; // 
	public static final mkdb.TTable<?,?> PVP1RACES = _Tables_.getInstance().pvp1races; // 
	public static final mkdb.TTable<?,?> PVP3HISTORYSCORELIST = _Tables_.getInstance().pvp3historyscorelist; // 
	public static final mkdb.TTable<?,?> PVP3RACES = _Tables_.getInstance().pvp3races; // 
	public static final mkdb.TTable<?,?> PVP5HISTORYSCORELIST = _Tables_.getInstance().pvp5historyscorelist; // 
	public static final mkdb.TTable<?,?> PVP5RACES = _Tables_.getInstance().pvp5races; // 
	public static final mkdb.TTable<?,?> PVP5SCORELIST = _Tables_.getInstance().pvp5scorelist; // 
	public static final mkdb.TTable<?,?> QUALITY = _Tables_.getInstance().quality; // 
	public static final mkdb.TTable<?,?> RANDOMNAMETAB = _Tables_.getInstance().randomnametab; // 
	public static final mkdb.TTable<?,?> RECEFLOWERLIST = _Tables_.getInstance().receflowerlist; // 
	public static final mkdb.TTable<?,?> REDPACKINFOVIEWLISTTAB = _Tables_.getInstance().redpackinfoviewlisttab; // 
	public static final mkdb.TTable<?,?> REDPACKLIST = _Tables_.getInstance().redpacklist; // 
	public static final mkdb.TTable<?,?> REFRESHMONSTERINFO = _Tables_.getInstance().refreshmonsterinfo; // 
	public static final mkdb.TTable<?,?> REQUESTRUNEINFOTAB = _Tables_.getInstance().requestruneinfotab; // 
	public static final mkdb.TTable<?,?> ROLE2IMPEXAM = _Tables_.getInstance().role2impexam; // 
	public static final mkdb.TTable<?,?> ROLE2INSTANCEZONE = _Tables_.getInstance().role2instancezone; // 
	public static final mkdb.TTable<?,?> ROLE2NPCBATTLE = _Tables_.getInstance().role2npcbattle; // 
	public static final mkdb.TTable<?,?> ROLEDAYPAY = _Tables_.getInstance().roledaypay; // 
	public static final mkdb.TTable<?,?> ROLEEVENTNPCINFOS = _Tables_.getInstance().roleeventnpcinfos; // 
	public static final mkdb.TTable<?,?> ROLEID2PROFESSIONLEADERTICKETS = _Tables_.getInstance().roleid2professionleadertickets; // 
	public static final mkdb.TTable<?,?> ROLEINSTANCETASK = _Tables_.getInstance().roleinstancetask; // 
	public static final mkdb.TTable<?,?> ROLELEVELLIST = _Tables_.getInstance().rolelevellist; // 
	public static final mkdb.TTable<?,?> ROLELOCK = _Tables_.getInstance().acceptedscenariomission; // activitycalendar  anyelegendtimer  anyemaxituan  bag  bagtimelock  battleflag  bingfengroles  blackmarketbagtab  blackmarketpettab  blackmarkettab  buffroles  buffrolestodisk  buymedicitemnum  changeschool  commitedmission  commitedscenariomission  crosstemproles  debugflag  depot  equip  erole  fdqmazelist  festival  friendgivenum  friends  frole  fushirecordtable  helpcount  huobancolumns  huobanzhenrongs  invitepeopleinfo  itemrecover  ldvideoroleroseinfolisttab  livedie2key  livedieroleinfotab  majorscenariomission  market  marketpet  markettradelogtab  menstor  modnameitemroles  multiexp  npcfollowroles  offlinefuture  offlinemsg  onetimeeventtab  onlinerefresh  pet  petdepot  petrecover  properties  pvp1roles  pvp3roles  pvp5roles  questbag  redpackroleinfolisttab  regtbl  requestgoto  role2npcawards  role2weibonotify  roleapplyclantab  rolebestow  rolebuygoodslimits  rolecircletask  rolecircletaskcomplete  roleclanpoint  roledoublecharge  rolehook  roleid2activityquestion  roleid2battleid  roleid2battlemelonid  roleid2bj  roleid2chargereturnprofit  roleid2clanfightid  roleid2clanfightstatistics  roleid2kickinfo  roleid2liveskill  roleid2monthcard  roleid2particleskill  roleid2teamid  roleid2userid  roleid2weekgiverecegift  roleid2worldredpacksendtotal  roleidclan  rolekaibaoxiang  rolekaigonghuibaoxiang  rolelockscreen  rolemuldayloginreward  roleofflinehook  roleonoffstate  rolepetsellcount  roleposes  roleranknotifytime  rolereceiveredpackrecordtab  rolerecourse  rolerecruitaward  roleredpackrecordtab  rolerenxingdata  rolerollcard  rolesafelock  rolesalegoodslimits  roleschargelimit  rolesfestivaldata  rolespaces  rolespecialquesttimer  rolesplayactive  rolesplayactiveweek  roletaskeventtab  roletasks  roletradinghisrecordlisttab  roletradinginfolisttab  roleupdatemodelnumtab  roleupdatetimetab  roleuseitemcount  roleyaoqianshutables  runeinfotab  singleinviting  skillroles  srredpacknumlisttab  subscriptions  takebackmarketcontainertab  teaminvite  temp  timingreward  trackedmission  transformbyitem  transfromroles  triggerroles  vipinfo  watcherid2battleid  wheelprogress  worldeventtab  
	public static final mkdb.TTable<?,?> ROLENAME2KEY = _Tables_.getInstance().rolename2key; // 
	public static final mkdb.TTable<?,?> ROLENPCJIANGLIINFOS = _Tables_.getInstance().rolenpcjiangliinfos; // 
	public static final mkdb.TTable<?,?> ROLENUMFORNEWSERVER = _Tables_.getInstance().rolenumfornewserver; // 
	public static final mkdb.TTable<?,?> ROLEPINGBIROLESINFOS = _Tables_.getInstance().rolepingbirolesinfos; // 
	public static final mkdb.TTable<?,?> ROLEPROFESSIONRANKLIST = _Tables_.getInstance().roleprofessionranklist; // 
	public static final mkdb.TTable<?,?> ROLEQUITSTATISTICS = _Tables_.getInstance().rolequitstatistics; // 
	public static final mkdb.TTable<?,?> ROLERANKDATALIST = _Tables_.getInstance().rolerankdatalist; // 
	public static final mkdb.TTable<?,?> ROLESHIDELIST = _Tables_.getInstance().roleshidelist; // 
	public static final mkdb.TTable<?,?> ROLETIMERNPCINFOS = _Tables_.getInstance().roletimernpcinfos; // 
	public static final mkdb.TTable<?,?> ROLETRADINGRECORDSTAB = _Tables_.getInstance().roletradingrecordstab; // 
	public static final mkdb.TTable<?,?> ROLEYAOQIANSHUINFOS = _Tables_.getInstance().roleyaoqianshuinfos; // 
	public static final mkdb.TTable<?,?> ROLEZONGHELIST = _Tables_.getInstance().rolezonghelist; // 
	public static final mkdb.TTable<?,?> SERVICEINFOS = _Tables_.getInstance().serviceinfos; // 
	public static final mkdb.TTable<?,?> SERVICESETS = _Tables_.getInstance().servicesets; // 
	public static final mkdb.TTable<?,?> SHOWINGMISSION = _Tables_.getInstance().showingmission; // 
	public static final mkdb.TTable<?,?> SINGLECOMPENSATIONS = _Tables_.getInstance().singlecompensations; // 
	public static final mkdb.TTable<?,?> TABLEKEYNUM = _Tables_.getInstance().tablekeynum; // 
	public static final mkdb.TTable<?,?> TEAMLOCK = _Tables_.getInstance().instanceaskinfos; // team  teamfilters  
	public static final mkdb.TTable<?,?> TEAMMATCHLOCK = _Tables_.getInstance().targetid2teammatch; // 
	public static final mkdb.TTable<?,?> TICKETITEMINFO = _Tables_.getInstance().ticketiteminfo; // 
	public static final mkdb.TTable<?,?> TIMERNPCINFOTABLE = _Tables_.getInstance().timernpcinfotable; // 
	public static final mkdb.TTable<?,?> TOTALREGISTERNUM = _Tables_.getInstance().totalregisternum; // 
	public static final mkdb.TTable<?,?> TRADINGIDTAB = _Tables_.getInstance().tradingidtab; // 
	public static final mkdb.TTable<?,?> UNIQUEPETS = _Tables_.getInstance().uniquepets; // 
	public static final mkdb.TTable<?,?> USERCOMPENSATION = _Tables_.getInstance().usercompensation; // 
	public static final mkdb.TTable<?,?> USERDEVICEINFOTAB = _Tables_.getInstance().userdeviceinfotab; // 
	public static final mkdb.TTable<?,?> USERID2FORBIDTIME = _Tables_.getInstance().userid2forbidtime; // 
	public static final mkdb.TTable<?,?> USERLOCK = _Tables_.getInstance().chargehistory; // firstchargenew  fushinum  lianyunaward  user  yybfushi  
	public static final mkdb.TTable<?,?> USERPUNISH = _Tables_.getInstance().userpunish; // 
	public static final mkdb.TTable<?,?> WEEKINDEXS = _Tables_.getInstance().weekindexs; // 
	public static final mkdb.TTable<?,?> WHEELITEMLIMIT = _Tables_.getInstance().wheelitemlimit; // 
	public static final mkdb.TTable<?,?> WINNERSCORE = _Tables_.getInstance().winnerscore; // 
	public static final mkdb.TTable<?,?> YAOQIANSHUTABLES = _Tables_.getInstance().yaoqianshutables; // 
	public static final mkdb.TTable<?,?> YINGYONGBAOINFOS = _Tables_.getInstance().yingyongbaoinfos; // 
	public static final mkdb.TTable<?,?> YYBCHARGEORDER = _Tables_.getInstance().yybchargeorder; // 

}
